<?xml version="1.0" encoding="UTF-8"?>

<!-- This is an automatically generated file. -->
<Chapter Label="Chapter_Toric_Varieties">
<Heading>Toric Varieties</Heading>

<P/>
<Section Label="Chapter_Toric_Varieties_Section_Toric_Varieties_Examples">
<Heading>Toric Varieties: Examples</Heading>

<P/>
<Subsection Label="Chapter_Toric_Varieties_Section_Toric_Varieties_Examples_Subsection_The_Hirzebruch_surface_of_index_5">
<Heading>The Hirzebruch surface of index 5</Heading>

<#Include Label="Hirzebruch5">

<P/>
</Subsection>


<Subsection Label="Chapter_Toric_Varieties_Section_Toric_Varieties_Examples_Subsection_A_smooth_complete_toric_variety_which_is_not_projective">
<Heading>A smooth, complete toric variety which is not projective</Heading>

<#Include Label="nonprojective">

<P/>
</Subsection>


<Subsection Label="Chapter_Toric_Varieties_Section_Toric_Varieties_Examples_Subsection_Convenient_construction_of_toric_varieties">
<Heading>Convenient construction of toric varieties</Heading>

<#Include Label="ConvenientConstructors">

<P/>
</Subsection>


<Subsection Label="Chapter_Toric_Varieties_Section_Toric_Varieties_Examples_Subsection_Toric_varieties_from_gradings">
<Heading>Toric varieties from gradings</Heading>

<#Include Label="ToricVarietiesFromGrading">

<P/>
</Subsection>


<Subsection Label="Chapter_Toric_Varieties_Section_Toric_Varieties_Examples_Subsection_Blowups_of_toric_varieties_by_star_subdivisions_of_fans">
<Heading>Blowups of toric varieties by star subdivisions of fans</Heading>

<#Include Label="Blowups">

<P/>
</Subsection>


</Section>


<Section Label="Chapter_Toric_Varieties_Section_Toric_variety_Category_and_Representations">
<Heading>Toric variety: Category and Representations</Heading>

<ManSection>
  <Filt Arg="M" Name="IsToricVariety" Label="for IsObject"/>
 <Returns>true or false
</Returns>
 <Description>
  Checks if an object is a toric variety.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="object" Name="IsCategoryOfToricVarieties" Label="for IsHomalgCategory"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
  The <A>GAP</A> category of toric varieties.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="twitter" Label="for IsToricVariety"/>
 <Returns>a ring
</Returns>
 <Description>
  This is a dummy to get immediate methods triggered at some times. It never has a value.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Toric_Varieties_Section_Properties">
<Heading>Properties</Heading>

<ManSection>
  <Prop Arg="vari" Name="IsNormalVariety" Label="for IsToricVariety"/>
 <Returns>true or false
</Returns>
 <Description>
  Checks if the toric variety <A>vari</A> is a normal variety.
 </Description>
</ManSection>


<ManSection>
  <Prop Arg="vari" Name="IsAffine" Label="for IsToricVariety"/>
 <Returns>true or false
</Returns>
 <Description>
  Checks if the toric variety <A>vari</A> is an affine variety.
 </Description>
</ManSection>


<ManSection>
  <Prop Arg="vari" Name="IsProjective" Label="for IsToricVariety"/>
 <Returns>true or false
</Returns>
 <Description>
  Checks if the toric variety <A>vari</A> is a projective variety.
 </Description>
</ManSection>


<ManSection>
  <Prop Arg="vari" Name="IsSmooth" Label="for IsToricVariety"/>
 <Returns>true or false
</Returns>
 <Description>
  Checks if the toric variety <A>vari</A> is smooth.
 </Description>
</ManSection>


<ManSection>
  <Prop Arg="vari" Name="IsComplete" Label="for IsToricVariety"/>
 <Returns>true or false
</Returns>
 <Description>
  Checks if the toric variety <A>vari</A> is complete.
 </Description>
</ManSection>


<ManSection>
  <Prop Arg="vari" Name="HasTorusfactor" Label="for IsToricVariety"/>
 <Returns>true or false
</Returns>
 <Description>
  Checks if the toric variety <A>vari</A> has a torus factor.
 </Description>
</ManSection>


<ManSection>
  <Prop Arg="vari" Name="HasNoTorusfactor" Label="for IsToricVariety"/>
 <Returns>true or false
</Returns>
 <Description>
  Checks if the toric variety <A>vari</A> has no torus factor.
 </Description>
</ManSection>


<ManSection>
  <Prop Arg="vari" Name="IsOrbifold" Label="for IsToricVariety"/>
 <Returns>true or false
</Returns>
 <Description>
  Checks if the toric variety <A>vari</A> has an orbifold, which is, in the toric case, equivalent to the 
 simpliciality of the fan.
 </Description>
</ManSection>


<ManSection>
  <Prop Arg="vari" Name="IsSimplicial" Label="for IsToricVariety"/>
 <Returns>true or false
</Returns>
 <Description>
  Checks if the toric variety <A>vari</A> is simplicial. This is a convenience method equivalent to
 IsOrbifold.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Toric_Varieties_Section_Attributes">
<Heading>Attributes</Heading>

<ManSection>
  <Attr Arg="vari" Name="AffineOpenCovering" Label="for IsToricVariety"/>
 <Returns>a list
</Returns>
 <Description>
  Returns a torus invariant affine open covering of the variety <A>vari</A>. The affine open cover is computed out of the
  cones of the fan.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="CoxRing" Label="for IsToricVariety"/>
 <Returns>a ring
</Returns>
 <Description>
  Returns the Cox ring of the variety <A>vari</A>. The actual method requires
  a string with a name for the variables. A method for computing the Cox ring without
  a variable given is not implemented. You will get an error.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="ListOfVariablesOfCoxRing" Label="for IsToricVariety"/>
 <Returns>a list
</Returns>
 <Description>
  Returns a list of the variables of the cox ring of the variety <A>vari</A>.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="ClassGroup" Label="for IsToricVariety"/>
 <Returns>a module
</Returns>
 <Description>
  Returns the class group of the variety <A>vari</A> as factor of a free module.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="TorusInvariantDivisorGroup" Label="for IsToricVariety"/>
 <Returns>a module
</Returns>
 <Description>
  Returns the subgroup of the Weil divisor group of the variety <A>vari</A> generated by the torus invariant prime divisors.
  This is always a finitely generated free module over the integers.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="MapFromCharacterToPrincipalDivisor" Label="for IsToricVariety"/>
 <Returns>a morphism
</Returns>
 <Description>
  Returns a map which maps an element of the character group into the torus invariant Weil group of the variety <A>vari</A>.
  This has to be viewed as a help method to compute divisor classes.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="MapFromWeilDivisorsToClassGroup" Label="for IsToricVariety"/>
 <Returns>a morphism
</Returns>
 <Description>
  Returns a map which maps a Weil divisor into the class group.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="Dimension" Label="for IsToricVariety"/>
 <Returns>an integer
</Returns>
 <Description>
  Returns the dimension of the variety <A>vari</A>.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="DimensionOfTorusfactor" Label="for IsToricVariety"/>
 <Returns>an integer
</Returns>
 <Description>
  Returns the dimension of the torus factor of the variety <A>vari</A>.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="CoordinateRingOfTorus" Label="for IsToricVariety"/>
 <Returns>a ring
</Returns>
 <Description>
  Returns the coordinate ring of the torus of the variety <A>vari</A>. This is by default done with the variables
  <A>x1</A> to <A>xn</A> where <A>n</A> is the dimension of the variety. To use a different set of variables, a convenience method
  is provided and described in the <A>methods</A> section.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="ListOfVariablesOfCoordinateRingOfTorus" Label="for IsToricVariety"/>
 <Returns>a list
</Returns>
 <Description>
  Returns the list of variables in the coordinate ring of the torus of the variety <A>vari</A>.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="IsProductOf" Label="for IsToricVariety"/>
 <Returns>a list
</Returns>
 <Description>
  If the variety <A>vari</A> is a product of 2 or more varieties, the list contains those varieties.
  If it is not a product or at least not generated as a product, the list only contains the variety itself.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="CharacterLattice" Label="for IsToricVariety"/>
 <Returns>a module
</Returns>
 <Description>
  The method returns the character lattice of the variety <A>vari</A>, computed as the containing grid of the 
  underlying convex object, if it exists.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="TorusInvariantPrimeDivisors" Label="for IsToricVariety"/>
 <Returns>a list
</Returns>
 <Description>
  The method returns a list of the torus invariant prime divisors of the variety <A>vari</A>.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="IrrelevantIdeal" Label="for IsToricVariety"/>
 <Returns>an ideal
</Returns>
 <Description>
  Returns the irrelevant ideal of the Cox ring of the variety <A>vari</A>.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="SRIdeal" Label="for IsToricVariety"/>
 <Returns>an ideal
</Returns>
 <Description>
  Returns the Stanley-Rei√üner ideal of the Cox ring of the variety <A>vari</A>.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="MorphismFromCoxVariety" Label="for IsToricVariety"/>
 <Returns>a morphism
</Returns>
 <Description>
  The method returns the quotient morphism from the variety of the Cox ring to the variety <A>vari</A>.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="CoxVariety" Label="for IsToricVariety"/>
 <Returns>a variety
</Returns>
 <Description>
  The method returns the Cox variety of the variety <A>vari</A>.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="FanOfVariety" Label="for IsToricVariety"/>
 <Returns>a fan
</Returns>
 <Description>
  Returns the fan of the variety <A>vari</A>. This is set by default.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="CartierTorusInvariantDivisorGroup" Label="for IsToricVariety"/>
 <Returns>a module
</Returns>
 <Description>
  Returns the the group of Cartier divisors of the variety <A>vari</A> as a subgroup of the divisor group.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="PicardGroup" Label="for IsToricVariety"/>
 <Returns>a module
</Returns>
 <Description>
   Returns the Picard group of the variety <A>vari</A> as factor of a free module.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="NameOfVariety" Label="for IsToricVariety"/>
 <Returns>a string
</Returns>
 <Description>
   Returns the name of the variety <A>vari</A> if it has one and it is known or can be computed.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="ZariskiCotangentSheaf" Label="for IsToricVariety"/>
 <Returns>a f.p. graded <A>S</A>-module
</Returns>
 <Description>
  This method returns a f. p. graded <A>S</A>-module (<A>S</A> being the Cox ring of the variety), such that the sheafification of 
  this module is the Zariski cotangent sheaf of <A>vari</A>.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="CotangentSheaf" Label="for IsToricVariety"/>
 <Returns>a f.p. graded <A>S</A>-module
</Returns>
 <Description>
  This method returns a f. p. graded <A>S</A>-module (<A>S</A> being the Cox ring of the variety), such that the sheafification of
  this module is the cotangent sheaf of <A>vari</A>.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="EulerCharacteristic" Label="for IsToricVariety"/>
 <Returns>a non-negative integer
</Returns>
 <Description>
  This method computes the Euler characteristic of <A>vari</A>.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Toric_Varieties_Section_Methods">
<Heading>Methods</Heading>

<ManSection>
  <Oper Arg="vari" Name="UnderlyingSheaf" Label="for IsToricVariety"/>
 <Returns>a sheaf
</Returns>
 <Description>
  The method returns the underlying sheaf of the variety <A>vari</A>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="vari, vars" Name="CoordinateRingOfTorus" Label="for IsToricVariety, IsList"/>
 <Returns>a ring
</Returns>
 <Description>
  Computes the coordinate ring of the torus of the variety <A>vari</A> with the variables <A>vars</A>. 
  The argument <A>vars</A> need to be a list of strings with length dimension or two times dimension.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="vari1, vari2" Name="\*" Label="for IsToricVariety, IsToricVariety"/>
 <Returns>a variety
</Returns>
 <Description>
  Computes the categorial product of the varieties <A>vari1</A> and <A>vari2</A>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="elem, vari" Name="CharacterToRationalFunction" Label="for IsHomalgElement, IsToricVariety"/>
 <Returns>a homalg element
</Returns>
 <Description>
  Computes the rational function corresponding to the character grid element <A>elem</A> or to the list of 
  integers <A>elem</A>. This computation needs to know the coordinate ring of the torus of the variety <A>vari</A>. By
  default this ring is introduced with variables <A>x1</A> to <A>xn</A> where <A>n</A> is the dimension of the variety. If
  different variables should be used, then <A>CoordinateRingOfTorus</A> has to be set accordingly before calling this method.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="vari, vars" Name="CoxRing" Label="for IsToricVariety, IsList"/>
 <Returns>a ring
</Returns>
 <Description>
  Computes the Cox ring of the variety <A>vari</A>. <A>vars</A> needs to be a string. We allow for two
 different formats. Either, it is a string which does not contain ",". Then this string will be index and
 the resulting strings are then used as names for the variables of the Cox ring. Alternatively, one can also
 use a string containing ",". In this case, a "," is considered as separator and one can provide individual
 names for all variables of the Cox ring.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="vari" Name="WeilDivisorsOfVariety" Label="for IsToricVariety"/>
 <Returns>a list
</Returns>
 <Description>
  Returns a list of the currently defined Divisors of the toric variety.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="vari" Name="Fan" Label="for IsToricVariety"/>
 <Returns>a fan
</Returns>
 <Description>
  Returns the fan of the variety <A>vari</A>. This is a rename for FanOfVariety.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="vari" Name="Factors" Label="for IsToricVariety"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="vari, p" Name="BlowUpOnIthMinimalTorusOrbit" Label="for IsToricVariety, IsInt"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Func Arg="arg" Name="ZariskiCotangentSheafViaEulerSequence" />
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Func Arg="arg" Name="ZariskiCotangentSheafViaPoincareResidueMap" />
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="vari, p" Name="ithBettiNumber" Label="for IsToricVariety, IsInt"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="vari, p" Name="NrOfqRationalPoints" Label="for IsToricVariety, IsInt"/>
 <Description>
<P/>
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Toric_Varieties_Section_Constructors">
<Heading>Constructors</Heading>

<ManSection>
  <Oper Arg="vari" Name="ToricVariety" Label="for IsToricVariety"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="vari" Name="ToricVariety" Label="for IsList"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="conv" Name="ToricVariety" Label="for IsConvexObject"/>
 <Returns>a variety
</Returns>
 <Description>
  Creates a toric variety out of the convex object <A>conv</A>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="rays, cones, degree_list" Name="ToricVariety" Label="for IsList, IsList, IsList"/>
 <Returns>a variety
</Returns>
 <Description>
 Creates a toric variety from a list <A>rays</A> of ray generators and cones <A>cones</A>.
 Beyond the functionality of the other methods, this constructor allows to assign specific 
 gradings to the homogeneous variables of the Cox ring.
 With respect to the order in which the rays appear in the list <A>rays</A>, we assign gradings
 as provided by the third argument <A>degree_list</A> . The latter is a list of integers.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="rays, cones, degree_list, var_list" Name="ToricVariety" Label="for IsList, IsList, IsList, IsList"/>
 <Returns>a variety
</Returns>
 <Description>
 Creates a toric variety from a list <A>rays</A> of ray generators and cones <A>cones</A>.
 Beyond the functionality of the other methods, this constructor allows to assign specific
 gradings and homogeneous variable names to the ray generators of this toric variety.
 With respect to the order in which the rays appear in the list <A>rays</A>, we assign gradings
 and variable names as provided by the third and fourth argument. These are the list of gradings
 <A>degree_list</A> and the list of variables names <A>var_list</A>. The former is a list of
 integers and the latter a list of strings.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="a list of lists of integers" Name="ToricVarietiesFromGrading" Label="for IsList"/>
 <Returns>a list of toric varieties
</Returns>
 <Description>
 Given a <Math>\mathbb{Z}^n</Math>-grading of a polynomial ring, this method computes all toric varieties, which are
 normal and have no-torus factor and whose Cox ring obeys the given <Math>\mathbb{Z}^n</Math>-grading.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="a list of lists of integers" Name="ToricVarietyFromGrading" Label="for IsList"/>
 <Returns>a toric variety
</Returns>
 <Description>
 Given a <Math>\mathbb{Z}^n</Math>-grading of a polynomial ring, this method computes a toric variety, which is
 normal and has no-torus factor and whose Cox ring obeys the given <Math>\mathbb{Z}^n</Math>-grading.
 </Description>
</ManSection>


</Section>


</Chapter>

