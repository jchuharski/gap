# ModulePresentationsForCAP, single 1
#
# DO NOT EDIT THIS FILE - EDIT EXAMPLES IN THE SOURCE INSTEAD!
#
# This file has been generated by AutoDoc. It contains examples extracted from
# the package documentation. Each example is preceded by a comment which gives
# the name of a GAPDoc XML file and a line range from which the example were
# taken. Note that the XML file in turn may have been generated by AutoDoc
# from some other input.
#
gap> START_TEST("modulepresentationsforcap01.tst");

# doc/_Chapter_Examples_and_Tests.xml:10-28
gap> ZZ := HomalgRingOfIntegersInSingular();;
gap> M1 := AsLeftPresentation( HomalgMatrix( [ [ "2" ] ], ZZ ) );;
gap> M2 := AsLeftPresentation( HomalgMatrix( [ [ "3" ] ], ZZ ) );;
gap> M3 := AsLeftPresentation( HomalgMatrix( [ [ "4" ] ], ZZ ) );;
gap> M := DirectSum( M1, M2, M3 );;
gap> Display( Annihilator( M ) );
12

A monomorphism in Category of left presentations of Z
gap> M1 := AsRightPresentation( HomalgMatrix( [ [ "2" ] ], ZZ ) );;
gap> M2 := AsRightPresentation( HomalgMatrix( [ [ "3" ] ], ZZ ) );;
gap> M3 := AsRightPresentation( HomalgMatrix( [ [ "4" ] ], ZZ ) );;
gap> M := DirectSum( M1, M2, M3 );;
gap> Display( Annihilator( M ) );
12

A monomorphism in Category of right presentations of Z

#
gap> STOP_TEST("modulepresentationsforcap01.tst", 1);
